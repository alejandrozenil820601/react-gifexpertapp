{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setcategories","useState","state","setstate","onSubmit","e","preventDefault","trim","length","sc","value","onChange","target","type","getGif","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","useEffect","then","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,cAE9B,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAiBI,OACI,sBAAMC,SAZO,SAACC,GAClBA,EAAEC,iBAECJ,EAAMK,OAAOC,OAAO,IAEnBR,GAAc,SAAAS,GAAE,OAAIP,GAAJ,mBAAaO,OAC7BN,EAAS,MAMT,SACI,uBACIO,MAAQR,EACRS,SAnBU,SAACN,GACvBF,EAASE,EAAEO,OAAOF,QAmBVG,KAAK,Y,+BCzBAC,EAAM,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACZC,EADY,iDACmCC,UAAUH,GAD7C,+DAECI,MAAMF,GAFP,cAEZG,EAFY,gBAGKA,EAAKC,OAHV,uBAGVC,EAHU,EAGVA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATxB,kBAaXM,GAbW,4CAAH,sDCAVO,EAAc,SAAC,GAAsB,EAAnBJ,GAAoB,IAAjBC,EAAgB,EAAhBA,MAAMV,EAAU,EAAVA,IAEpC,OACI,sBAAKc,UAAU,yCAAf,UACR,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAKA,QCDQO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAEtB,ECLwB,SAAEA,GAC1B,MAA0Bd,mBAAS,CAC/BqB,KAAK,GACLa,SAAQ,IAFZ,mBAAOjC,EAAP,KAAcC,EAAd,KAmBA,OAdAiC,qBAAU,WACNtB,EAAQC,GAAWsB,MAAK,SAAAT,GAEhBzB,EACI,CACImB,KAAKM,EACLO,SAAQ,SAM1B,CAACpB,IAEIb,EDf2BoC,CAAcvB,GAAlCa,EAAd,EAAQN,KAAca,EAAtB,EAAsBA,QAatB,OACI,qCACA,oBAAIJ,UAAU,oCAAd,SAAoDhB,IAClDoB,GAAW,mBAAGJ,UAAU,mCAAb,wBAEb,qBAAKA,UAAU,YAAf,SAKYH,EAAOJ,KAAI,SAAAC,GACP,OAAO,cAAC,EAAD,eAAgCA,GAAbA,EAAIC,aE3BxCa,EAAe,WAGzB,MAAoCtC,mBAAS,CAAC,cAA9C,mBAAOuC,EAAP,KAAmBxC,EAAnB,KAOA,OACI,qCACI,8CACA,uBACA,cAAC,EAAD,CAAaA,cAAeA,IAE5B,6BAEQwC,EAAWhB,KAAI,SAAAT,GAGb,OAAQ,cAAC,EAAD,CAEFA,SAAaA,GADLA,Y,MCrBpC0B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.04a56cde.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ( {setcategories}) => {\r\n\r\nconst [state, setstate] = useState('');\r\n\r\nconst hanlerInputChange = (e)=>{\r\n    setstate(e.target.value);\r\n};\r\n\r\nconst hanlerSubmit = (e) =>{\r\n    e.preventDefault();\r\n\r\n    if(state.trim().length>2)\r\n    {\r\n        setcategories(sc=> [state,...sc]);\r\n        setstate('');\r\n    }\r\n\r\n}\r\n\r\n    return (\r\n        <form onSubmit={ hanlerSubmit }>\r\n            <input \r\n                value ={state}\r\n                onChange = { hanlerInputChange }\r\n            type='text'/>\r\n            \r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setcategories: PropTypes.func.isRequired\r\n}\r\n\r\n\r\n","\r\n\r\n    export const getGif = async( category )=>{\r\n        const url =`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category) }&limit=10&api_key=0cJtMA1HFOlXwLUrM2gbk8ZpgYEIX79f`;\r\n        const resp = await fetch(url);\r\n        const { data } = await resp.json();\r\n\r\n        const gifs = data.map(img =>{\r\n            return{\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n        });\r\n\r\n        return gifs;\r\n    }","import React from 'react'\r\n\r\nexport const GifGridItem = ( { id,title,url} ) => {\r\n   \r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n<img src={ url } alt={ title}></img>\r\n<p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","//rafc\r\nimport React/*, { useState,useEffect }*/ from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n//import { getGif } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ( {category} ) => {\r\n\r\n    const { data: images, loading } = useFetchGifs( category );\r\n\r\n\r\n/*const [images, setImages] = useState([])\r\n\r\n    useEffect(()=>{\r\n        getGif( category ).then(images=>{\r\n            setImages(images);\r\n        })\r\n    },[ category ])*/\r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\r\n        { loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\r\n        \r\n        <div className=\"card-grid\"> \r\n     \r\n        \r\n         \r\n                {\r\n                    images.map(img=>{\r\n                        return <GifGridItem key={ img.id} { ...img }/>\r\n                    })\r\n                }\r\n         \r\n        </div>\r\n        \r\n        </>\r\n    );\r\n\r\n \r\n \r\n\r\n\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGif } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n\r\n    useEffect(()=>{\r\n        getGif( category ).then(images=>{\r\n           // setTimeout(() => {\r\n                setstate(\r\n                    {\r\n                        data:images,\r\n                        loading:false\r\n                    }\r\n        \r\n                );\r\n            //}, 3000);\r\n        });\r\n    },[category]);\r\n\r\n    return state;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\n\r\n export const GifExpertApp = ()=>{\r\n\r\n\r\n    const [categories, setcategories] = useState(['one punch'])\r\n\r\n    //const handleAdd =() =>{\r\n       // setcategories([...categories,'uno mas']);\r\n    //    setcategories(sc=> [...sc,'unos mas 2']);\r\n  //  }\r\n\r\n    return (\r\n        <>\r\n            <h2>gifExpertApp</h2>\r\n            <hr/>\r\n            <AddCategory setcategories={setcategories}/>\r\n\r\n            <ol>\r\n                {\r\n                    categories.map(category=>{\r\n                    //    return <li key ={category}>{category}</li>\r\n      \r\n                      return  <GifGrid \r\n                            key = { category }\r\n                            category = { category }\r\n                        />\r\n                    })\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n\n    <GifExpertApp />,\n\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}